//using Set 

Approach : 
    1 - sort the given array
    2 - for loop from int i to N
    3 - take two pointer lets say j & k 
    4 - j will point to the i+1 and k will point to the last element
    5 - take sum of arr[i]+arr[j]+arr[k] if it is Zero then insert the triplets
    to the set. increment j and decrement k
    6 - if sum < 0 then increment j
    7 - if sum > 0 then decrement k
    8 - at the end just push all the elements to the resultant vector from out Set.

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {

        int target = 0; 
        sort(nums.begin() , nums.end());

        set<vector<int>> s;
        vector<vector<int>> res;

        for(int i = 0 ; i < nums.size() ; i++){
            int j = i + 1;
            int k = nums.size() - 1;

            while(j < k){
                int sum = nums[i]+nums[j]+nums[k];

                if(sum == target){
                    s.insert({nums[i],nums[j],nums[k]});
                    j++;
                    k--;
                }else if( sum < target ){
                    j++;
                }else{
                    k--;
                }
            }
        }
        for( auto it : s){
            res.push_back(it);
        }
        

        return res;
    }
};